# .github/workflows/docker-build-all.yml

name: Build and Push Alist Docker Images (Base and Full)

on:
  push:
    branches:
      - main # 或者你的默认分支名
  release:
    types: [published]
  workflow_dispatch:

jobs:
  # --- Job 1: 构建基础版 (alist) ---
  build-base:
    name: Build Base Image (alist)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # 需要写入 ghcr.io

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (Base)
        id: meta_base
        uses: docker/metadata-action@v5
        with:
          # 镜像名称: ghcr.io/用户名/alist
          images: ghcr.io/${{ github.repository_owner }}/alist
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{raw}}
            type=sha,prefix=,format=short

      - name: Build and push Base Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile # 确保指向正确的 Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_base.outputs.tags }}
          labels: ${{ steps.meta_base.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # 注意：这里没有 build-args，使用 Dockerfile 默认值

  # --- Job 2: 构建完整版 (alist-full) ---
  build-full:
    name: Build Full Image (alist-full)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # 需要写入 ghcr.io
    # 可选: 如果希望基础版成功后再构建完整版，可以添加 needs
    # needs: build-base

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (Full)
        id: meta_full
        uses: docker/metadata-action@v5
        with:
          # 镜像名称: ghcr.io/用户名/alist-full
          images: ghcr.io/${{ github.repository_owner }}/alist-full
          # 使用标准标签，因为镜像名已不同
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{raw}}
            type=sha,prefix=,format=short

      - name: Build and push Full Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile # 确保指向正确的 Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_full.outputs.tags }}
          labels: ${{ steps.meta_full.outputs.labels }}
          # 传递 build arguments 来安装 aria2 和 ffmpeg
          build-args: |
            INSTALL_ARIA2=true
            INSTALL_FFMPEG=true
          cache-from: type=gha
          cache-to: type=gha,mode=max
